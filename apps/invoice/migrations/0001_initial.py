# Generated by Django 4.2.1 on 2023-07-06 12:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inv_number', models.CharField(blank=True, max_length=20)),
                ('invoice_date', models.DateField(verbose_name='Invoice Date')),
                ('subject', models.CharField(max_length=100, verbose_name='Subject')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Due Date')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('cancelled', 'Cancelled')], max_length=20)),
                ('terms', models.TextField(blank=True)),
                ('has_paid', models.BooleanField(default=False)),
                ('is_sent', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('total', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
                ('terms', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('Goods', 'Goods'), ('Services', 'Services')], max_length=20)),
                ('name', models.CharField(max_length=100, verbose_name='Item Name')),
                ('units', models.PositiveIntegerField()),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100, verbose_name='Project Name')),
                ('project_code', models.CharField(max_length=100, verbose_name='Project Code')),
                ('description', models.TextField()),
                ('billing_method', models.CharField(choices=[('Fixed Cost', 'FIXED'), ('Based on Project Hours', 'HOURS'), ('Based on Task Hours', 'TASKS'), ('Based on Staff Hours', 'STAFF')], max_length=100, verbose_name='Billing Method')),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=100, verbose_name='Task Name')),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote_id', models.CharField(blank=True, max_length=20)),
                ('quote_date', models.DateField(verbose_name='Due Date')),
                ('expiration_date', models.DateField(verbose_name='Due Date')),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('terms', models.TextField(blank=True, verbose_name='Terms and Condition')),
                ('files', models.FileField(blank=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Recurring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=20)),
                ('frequency', models.CharField(choices=[('W', 'Weekly'), ('BW', 'Bi-Weekly'), ('M', 'Monthly'), ('Q', 'Quarterly'), ('HY', 'Half a Year'), ('Y', 'Yearly')], max_length=2)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('forever', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_recurring', to='customers.customer')),
                ('items', models.ManyToManyField(to='invoice.invoiceitem')),
            ],
        ),
    ]
